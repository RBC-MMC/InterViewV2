// <auto-generated />
using System;
using InterViewV2.Models.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InterViewV2.Migrations
{
    [DbContext(typeof(DB_Context))]
    [Migration("20250613121238_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InterViewV2.Models.Condidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommonComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CvId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneCountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("CvId");

                    b.ToTable("Condidate");
                });

            modelBuilder.Entity("InterViewV2.Models.Cv_Eduction", b =>
                {
                    b.Property<int>("Eduction_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Eduction_ID"), 1L, 1);

                    b.Property<string>("EducationDegree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EducationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationSpecialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EducationStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationalInstitution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmploymentCvId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Eduction_ID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Eduction_ID"), false);

                    b.HasIndex("EmploymentCvId");

                    b.ToTable("Cv_Eductions");
                });

            modelBuilder.Entity("InterViewV2.Models.Cv_OtherFile", b =>
                {
                    b.Property<Guid>("OtherFile_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmploymentCvId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtherFile_ID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("OtherFile_ID"), false);

                    b.HasIndex("EmploymentCvId");

                    b.ToTable("Cv_OtherFiles");
                });

            modelBuilder.Entity("InterViewV2.Models.Cv_ReferanceFrient", b =>
                {
                    b.Property<int>("ReferanceFrient_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReferanceFrient_ID"), 1L, 1);

                    b.Property<Guid>("EmploymentCvId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FriendReferenceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriendReferencePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FriendReferenceSurname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReferanceFrient_ID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ReferanceFrient_ID"), false);

                    b.HasIndex("EmploymentCvId");

                    b.ToTable("Cv_ReferanceFrients");
                });

            modelBuilder.Entity("InterViewV2.Models.Cv_WorkExperience", b =>
                {
                    b.Property<int>("WorkExperience_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkExperience_ID"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmploymentCvId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IAmCurrentlyWorking")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobResponsibilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForLeavingWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkEndtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WorkStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkExperience_ID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("WorkExperience_ID"), false);

                    b.HasIndex("EmploymentCvId");

                    b.ToTable("Cv_WorkExperiences");
                });

            modelBuilder.Entity("InterViewV2.Models.CvFiles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FilesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("FilesId");

                    b.HasIndex("PositionId");

                    b.ToTable("CvFiles");
                });

            modelBuilder.Entity("InterViewV2.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentAzName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentEnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Department");
                });

            modelBuilder.Entity("InterViewV2.Models.EmploymentCv", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnyOtherSkillsYouHave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendTraining")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AzeLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessType2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessType3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CV_Interview_Process_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CandidatePositions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPosition2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyPosition3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescribeIllness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuringBrief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate3")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FilesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HaveValid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interview_Application_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageSkill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestPosition2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestPosition3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerformJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneCountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonLeaving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonLeaving2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonLeaving3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipyardOffshore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate3")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkExperienceYES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingAtSeaYesNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WriteAddInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WriteEmployer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WriteExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YourSkillsThatCanSupportYourApplication")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FilesId");

                    b.HasIndex("PositionId");

                    b.ToTable("EmploymentCv");
                });

            modelBuilder.Entity("InterViewV2.Models.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("FilesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("FilesId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("InterViewV2.Models.Files", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Files");
                });

            modelBuilder.Entity("InterViewV2.Models.Interview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AnyQuestions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplyingPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedDuties1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedDuties2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignedDuties3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDCHire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDCKnow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CDCReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CV_Interview_Process_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerGoals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Children")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildrenSum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CondidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConsideringPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartmentIntwId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescribeDecision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribeOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencySituation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmploymentCvId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmploymentCv_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExamComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ExamScore")
                        .HasColumnType("float");

                    b.Property<int?>("ExamUserId")
                        .HasColumnType("int");

                    b.Property<string>("FamilySituation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FilesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GreatestStrength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HireComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HireReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HireUserId")
                        .HasColumnType("int");

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int?>("Intelligence1")
                        .HasColumnType("int");

                    b.Property<int?>("Intelligence2")
                        .HasColumnType("int");

                    b.Property<int?>("Intelligence3")
                        .HasColumnType("int");

                    b.Property<string>("Interview1Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Interview1Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Interview1Result")
                        .HasColumnType("bit");

                    b.Property<string>("Interview2Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Interview2Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Interview2Result")
                        .HasColumnType("bit");

                    b.Property<string>("Interview3Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Interview3Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Interview3Result")
                        .HasColumnType("bit");

                    b.Property<string>("InterviewExam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterviewWaive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interview_Application_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interviewer1ChatAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interviewer2ChatAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interviewer3ChatAdmin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastSalary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MilitaryStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinimumEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OffshoreExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Presentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousEmployer1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousEmployer2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousEmployer3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalLiscences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SafetyExperience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StopSmart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Suitable")
                        .HasColumnType("int");

                    b.Property<int?>("Suitable1")
                        .HasColumnType("int");

                    b.Property<int?>("Suitable2")
                        .HasColumnType("int");

                    b.Property<int?>("Suitable3")
                        .HasColumnType("int");

                    b.Property<string>("TeamPlayer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("User1Id")
                        .HasColumnType("int");

                    b.Property<int?>("User2Id")
                        .HasColumnType("int");

                    b.Property<int?>("User3Id")
                        .HasColumnType("int");

                    b.Property<string>("WrittenEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("CondidateId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DepartmentIntwId");

                    b.HasIndex("EmploymentCvId");

                    b.HasIndex("ExamUserId");

                    b.HasIndex("FilesId");

                    b.HasIndex("HireUserId");

                    b.HasIndex("PositionId");

                    b.HasIndex("User1Id");

                    b.HasIndex("User2Id");

                    b.HasIndex("User3Id");

                    b.ToTable("Interview");
                });

            modelBuilder.Entity("InterViewV2.Models.InterviewPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InterviewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("InterviewId");

                    b.HasIndex("PositionId");

                    b.ToTable("InterviewPosition");
                });

            modelBuilder.Entity("InterViewV2.Models.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PositionAzName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionEnName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("DepartmentId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("InterViewV2.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "d9a3bd2b-0d19-4219-be5f-58323a3da37e",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "e1b257d0-080e-4e00-b95a-a941344ba015",
                            Name = "Reviewer",
                            NormalizedName = "REVIEWER"
                        },
                        new
                        {
                            Id = 4,
                            ConcurrencyStamp = "4f809ef9-8cf1-43f6-854a-e71d3158e5d8",
                            Name = "HR Coordinator",
                            NormalizedName = "HR COORDINATOR"
                        },
                        new
                        {
                            Id = 5,
                            ConcurrencyStamp = "317e9bd6-2294-498f-a448-7bebbfb4b244",
                            Name = "Department Head",
                            NormalizedName = "DEPARTMENT HEAD"
                        },
                        new
                        {
                            Id = 6,
                            ConcurrencyStamp = "0a380f5e-ebd0-4b1a-b018-8daad935d9b9",
                            Name = "Employment Manager",
                            NormalizedName = "EMPLOYMENT MANAGER"
                        },
                        new
                        {
                            Id = 7,
                            ConcurrencyStamp = "8ca98553-5aa3-4000-bc84-17a7e58e744b",
                            Name = "HR Manager",
                            NormalizedName = "HR MANAGER"
                        },
                        new
                        {
                            Id = 8,
                            ConcurrencyStamp = "88d6fd6e-1699-4f98-9443-1eecda4cbeca",
                            Name = "Interviewer 1",
                            NormalizedName = "INTERVIEWER 1"
                        },
                        new
                        {
                            Id = 9,
                            ConcurrencyStamp = "6f243ba0-4a44-4b1f-bcef-0c4ff9304c49",
                            Name = "Interviewer 2",
                            NormalizedName = "INTERVIEWER 2"
                        },
                        new
                        {
                            Id = 10,
                            ConcurrencyStamp = "be9f992c-c4ae-40f6-8061-4208fcf53003",
                            Name = "Finance_DepartmentHead",
                            NormalizedName = "FINANCE_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 11,
                            ConcurrencyStamp = "54cc7648-0e81-48cc-a5c4-7fc87d6efb34",
                            Name = "HR_DepartmentHead",
                            NormalizedName = "HR_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 12,
                            ConcurrencyStamp = "d5dc8f44-2ff1-4569-b73b-a107e91440d6",
                            Name = "Legal_DepartmentHead",
                            NormalizedName = "LEGAL_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 13,
                            ConcurrencyStamp = "5782b036-22ac-4931-8ed4-bc7bb384a2de",
                            Name = "QHSET_DepartmentHead",
                            NormalizedName = "QHSET_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 14,
                            ConcurrencyStamp = "471a02ef-ac8b-4117-ab0f-11474637f611",
                            Name = "Office_DepartmentHead",
                            NormalizedName = "OFFICE_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 15,
                            ConcurrencyStamp = "f15721a5-8b0a-48aa-8aab-7654acb44a43",
                            Name = "Maintenance_DepartmentHead",
                            NormalizedName = "MAINTENANCE_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 16,
                            ConcurrencyStamp = "5bea2be6-b493-4f69-8807-d954573cabf6",
                            Name = "Commercial_DepartmentHead",
                            NormalizedName = "COMMERCIAL_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 17,
                            ConcurrencyStamp = "b86b2a26-eed2-4651-a28c-547084f3440b",
                            Name = "Procurement_DepartmentHead",
                            NormalizedName = "PROCUREMENT_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 18,
                            ConcurrencyStamp = "5766e399-0f50-4b3e-a1bf-62c2f045b098",
                            Name = "Projects_DepartmentHead",
                            NormalizedName = "PROJECTS_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 19,
                            ConcurrencyStamp = "d9cd7739-28f4-4b13-b0d2-623a10afe556",
                            Name = "RigOperations_DepartmentHead",
                            NormalizedName = "RIGOPERATIONS_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 20,
                            ConcurrencyStamp = "30bf8ae1-f1f1-43a9-a3ff-fca78a400964",
                            Name = "MarineBase_DepartmentHead",
                            NormalizedName = "MARINEBASE_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 21,
                            ConcurrencyStamp = "b1524be0-0de9-4c98-8ae0-4cb7dddd0d53",
                            Name = "Drilling_DepartmentHead",
                            NormalizedName = "DRILLING_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 22,
                            ConcurrencyStamp = "f155a5e3-88a1-42d3-afb4-53b562690467",
                            Name = "Marine_DepartmentHead",
                            NormalizedName = "MARINE_DEPARTMENTHEAD"
                        },
                        new
                        {
                            Id = 23,
                            ConcurrencyStamp = "7f31370b-0a29-473d-b70c-76c7ccd8faf2",
                            Name = "Materials_DepartmentHead",
                            NormalizedName = "MATERIALS_DEPARTMENTHEAD"
                        });
                });

            modelBuilder.Entity("InterViewV2.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PositionId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f5a1ebc8-cd88-4d26-8180-344716f9bcce",
                            Email = "admin@caspiandrilling.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Name = "Admin",
                            NormalizedEmail = "ADMIN@CASPIANDRILLING.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEF5wCTAXMjI2VFblO0GyB7iAWx6K9KpYJt0X+y4qec975SRQ3I9o3YaNW7ZXjabhhA==",
                            PhoneNumberConfirmed = false,
                            RegisterDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SecurityStamp = "",
                            Surname = "Admin",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("InterViewV2.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableVacantCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Departmet_Id")
                        .HasColumnType("int");

                    b.Property<int>("EmploymentCv_Id")
                        .HasColumnType("int");

                    b.Property<int>("Position_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("VacancyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("InterViewV2.Models.Condidate", b =>
                {
                    b.HasOne("InterViewV2.Models.EmploymentCv", "Cv")
                        .WithMany()
                        .HasForeignKey("CvId");

                    b.Navigation("Cv");
                });

            modelBuilder.Entity("InterViewV2.Models.Cv_Eduction", b =>
                {
                    b.HasOne("InterViewV2.Models.EmploymentCv", "EmploymentCv")
                        .WithMany("Cv_Eductions")
                        .HasForeignKey("EmploymentCvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmploymentCv");
                });

            modelBuilder.Entity("InterViewV2.Models.Cv_OtherFile", b =>
                {
                    b.HasOne("InterViewV2.Models.EmploymentCv", "EmploymentCv")
                        .WithMany("Cv_OtherFiles")
                        .HasForeignKey("EmploymentCvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmploymentCv");
                });

            modelBuilder.Entity("InterViewV2.Models.Cv_ReferanceFrient", b =>
                {
                    b.HasOne("InterViewV2.Models.EmploymentCv", "EmploymentCv")
                        .WithMany("Cv_ReferanceFrients")
                        .HasForeignKey("EmploymentCvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmploymentCv");
                });

            modelBuilder.Entity("InterViewV2.Models.Cv_WorkExperience", b =>
                {
                    b.HasOne("InterViewV2.Models.EmploymentCv", "EmploymentCv")
                        .WithMany("Cv_WorkExperiences")
                        .HasForeignKey("EmploymentCvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmploymentCv");
                });

            modelBuilder.Entity("InterViewV2.Models.CvFiles", b =>
                {
                    b.HasOne("InterViewV2.Models.Files", "Files")
                        .WithMany()
                        .HasForeignKey("FilesId");

                    b.HasOne("InterViewV2.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Files");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("InterViewV2.Models.EmploymentCv", b =>
                {
                    b.HasOne("InterViewV2.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("InterViewV2.Models.Files", "Files")
                        .WithMany()
                        .HasForeignKey("FilesId");

                    b.HasOne("InterViewV2.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.Navigation("Department");

                    b.Navigation("Files");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("InterViewV2.Models.File", b =>
                {
                    b.HasOne("InterViewV2.Models.Files", "Files")
                        .WithMany("FileList")
                        .HasForeignKey("FilesId");

                    b.Navigation("Files");
                });

            modelBuilder.Entity("InterViewV2.Models.Interview", b =>
                {
                    b.HasOne("InterViewV2.Models.Condidate", "Condidate")
                        .WithMany("Interview")
                        .HasForeignKey("CondidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterViewV2.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("InterViewV2.Models.Department", "DepartmentIntw")
                        .WithMany()
                        .HasForeignKey("DepartmentIntwId");

                    b.HasOne("InterViewV2.Models.EmploymentCv", "EmploymentCv")
                        .WithMany()
                        .HasForeignKey("EmploymentCvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterViewV2.Models.User", "ExamUser")
                        .WithMany()
                        .HasForeignKey("ExamUserId");

                    b.HasOne("InterViewV2.Models.Files", "Files")
                        .WithMany()
                        .HasForeignKey("FilesId");

                    b.HasOne("InterViewV2.Models.User", "HireUser")
                        .WithMany()
                        .HasForeignKey("HireUserId");

                    b.HasOne("InterViewV2.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("InterViewV2.Models.User", "User1")
                        .WithMany()
                        .HasForeignKey("User1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InterViewV2.Models.User", "User2")
                        .WithMany()
                        .HasForeignKey("User2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InterViewV2.Models.User", "User3")
                        .WithMany()
                        .HasForeignKey("User3Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Condidate");

                    b.Navigation("Department");

                    b.Navigation("DepartmentIntw");

                    b.Navigation("EmploymentCv");

                    b.Navigation("ExamUser");

                    b.Navigation("Files");

                    b.Navigation("HireUser");

                    b.Navigation("Position");

                    b.Navigation("User1");

                    b.Navigation("User2");

                    b.Navigation("User3");
                });

            modelBuilder.Entity("InterViewV2.Models.InterviewPosition", b =>
                {
                    b.HasOne("InterViewV2.Models.Interview", "Interview")
                        .WithMany("Positions")
                        .HasForeignKey("InterviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterViewV2.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interview");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("InterViewV2.Models.Position", b =>
                {
                    b.HasOne("InterViewV2.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("InterViewV2.Models.User", b =>
                {
                    b.HasOne("InterViewV2.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("InterViewV2.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("InterViewV2.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("InterViewV2.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("InterViewV2.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("InterViewV2.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InterViewV2.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("InterViewV2.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InterViewV2.Models.Condidate", b =>
                {
                    b.Navigation("Interview");
                });

            modelBuilder.Entity("InterViewV2.Models.EmploymentCv", b =>
                {
                    b.Navigation("Cv_Eductions");

                    b.Navigation("Cv_OtherFiles");

                    b.Navigation("Cv_ReferanceFrients");

                    b.Navigation("Cv_WorkExperiences");
                });

            modelBuilder.Entity("InterViewV2.Models.Files", b =>
                {
                    b.Navigation("FileList");
                });

            modelBuilder.Entity("InterViewV2.Models.Interview", b =>
                {
                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
